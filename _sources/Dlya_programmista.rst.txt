Руководство программиста
==================================

Как работает программа
--------------------------------------------
| Существует два ввода в программу: ввод темы и ввод текста.
| Ввод темы осуществляется через консоль, после ввода слово проверяется с помощью библиотеки HunSpell на правильность и если слово корректно, то оно добавляется в список тем, и по нему ищутся и добавляются ключевые слова. Ввод текста реализован двумя способами: через консоль и в файле.

| Текст анализируется таким образом:
|   После того, как пользователь отправляет текст, программа преобразует слова текста к стеммам - основам слова.
|   После этого, мы сравниваем ключевые слова по теме, с стеммами по тексту.
|   Из этого сравнения мы узнаем процент совпадения темы с текстом, тема с максимальным процентом - искомая.
|   Кроме этого выводится процент по всем темам.

| Если введена новая тема, по ней создается словарь из ключевых слов, ключевые слова формируются следующим образом:
|   Парсится сайт с ключевыми запросами в интернете, из чего создается список, где все преобразуется к стеммам и сохраняются как ключевые слова.
|   Тема и список ключевых слов по ней сохраняются для дальнейшей работы программы

Какие библиотеки нужны для работы программы
--------------------------------------------
| Для программы нужна утилита "HunSpell" (установка приведена в Руководстве пользователя) для стемминга слов и проверки их корректности. А также следующие Python пакеты:
|   - hunspell
|   - docopt
|   - beautifulsoup4

Сборка установочного архива / документации
--------------------------------------------
| Для разработки необходимы утилита "Make" и следующие Python пакеты:
|   - setuptools
|   - pre-commit
|   - pytest
|   - autopep8
|   - pydocstyle
|   - pylint
|   - sphinx
|   - sphinx_rtd_theme
| Создание установочного архива и документации запускаются командами ``make build`` и ``make doc`` соответственно.

Тестирование
--------------------------------------------
| Для быстрого запуска тестов необходима утилита "Make" и Python пакет "pytest".
| Для запуска теста нужно набрать ``make test -f=<имя функции без префикса test>``